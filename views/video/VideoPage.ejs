<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Enov8 Videos</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet"/>
  <link rel="stylesheet" href="/css/faq.css" />

  <!-- Box Icons CDN for icons -->
  <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

  <link rel="stylesheet" href="/css/theme.css">
  <link rel="icon" type="image/x-icon" href="/favicon-32x32.png">
  <style>

.text-body {
  color: var(--text-color) !important;
}

    /* Additional video-specific styles that extend the FAQ theme */
    .video-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 24px;
      margin-top: 24px;
    }

    .video-card {
      background-color: var(--sidebar-color);
      border-radius: 16px;
      overflow: hidden;
      box-shadow: var(--shadow);
      border: 1px solid var(--border-color);
      transition: var(--tran-04);
      position: relative;
    }

    .video-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }

    .video-thumbnail {
      position: relative;
      width: 100%;
      height: 200px;
      overflow: hidden;
      cursor: pointer;
    }


    .video-thumbnail img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: var(--tran-04);  
    }




    .video-card:hover .video-thumbnail img {
      transform: scale(1.05);
    }

    .play-overlay {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 60px;
      height: 60px;
      background: rgba(36, 106, 40, 0.9);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: var(--tran-03);
      backdrop-filter: blur(10px);
    }

    .play-overlay i {
      color: white;
      font-size: 24px;
      margin-left: 3px;
    }

    .video-card:hover .play-overlay {
      background: var(--primary-color);
      transform: translate(-50%, -50%) scale(1.1);
    }

    .video-duration {
      position: absolute;
      bottom: 8px;
      right: 8px;
      background: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: 500;
    }

    .video-info {
      padding: 20px;
    cursor: pointer;
    }

    .video-title {
      font-size: 1rem;
      font-weight: 600;
      color: var(--text-color);
      margin-bottom: 8px;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .video-description {
      font-size: 0.875rem;
      color: var(--text-color);
      opacity: 0.7;
      line-height: 1.5;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .video-meta {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 12px;
      padding-top: 12px;
      border-top: 1px solid var(--border-color);
    }

    .video-views {
      font-size: 0.75rem;
      color: var(--text-color);
      opacity: 0.6;
      display: flex;
      align-items: center;
      gap: 4px;
    }

    .video-category-tag {
      background-color: var(--primary-color-light);
      color: var(--primary-color);
      padding: 4px 8px;
      border-radius: 6px;
      font-size: 0.75rem;
      font-weight: 500;
    }

    /* View Toggle Buttons */
    .view-controls {
      display: flex;
      align-items: center;
      gap: 16px;
      margin-bottom: 24px;
    }

    .view-toggle {
      display: flex;
      background-color: var(--sidebar-color);
      border-radius: 8px;
      padding: 4px;
      box-shadow: var(--shadow);
      border: 1px solid var(--border-color);
    }

    .view-btn {
      padding: 8px 12px;
      border: none;
      background: transparent;
      color: var(--text-color);
      border-radius: 6px;
      cursor: pointer;
      transition: var(--tran-03);
      display: flex;
      align-items: center;
      gap: 6px;
      font-size: 14px;
      font-weight: 500;
    }

    .view-btn:hover {
      background-color: var(--primary-color-light);
    }

    .view-btn.active {
      background-color: var(--primary-color);
      color: white;
    }

    .view-btn i {
      font-size: 16px;
    }

    /* List View Styles */
    .video-list {
      display: flex;
      flex-direction: column;
      gap: 16px;
      margin-top: 24px;
    }

    .video-list .video-card {
      display: flex;
      flex-direction: row;
      min-height: 140px;
      height: auto;
    }

    .video-list .video-thumbnail {
      width: 240px;
      height: 140px;
      flex-shrink: 0;
    }

    .video-list .video-info {
      flex: 1;
      display: flex;
      flex-direction: column;
      min-width: 0; /* Allow flex item to shrink below content size */
      overflow: hidden; /* Prevent content overflow */
      padding: 16px 20px; /* Ensure consistent padding */
    }

    .video-list .video-title {
      font-size: 1.1rem;
      font-weight: 600;
      color: var(--text-color);
      margin-bottom: 8px;
      line-height: 1.3;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      word-break: break-word;
    }

    .video-list .video-description {
      font-size: 0.875rem;
      color: var(--text-color);
      opacity: 0.7;
      line-height: 1.4;
      margin-bottom: 12px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      word-break: break-word;
    }

    .video-list .video-meta {
      margin-top: auto; /* Push meta to bottom */
      padding-top: 8px;
      border-top: 1px solid var(--border-color);
    }

    /* Loading and Empty States */
    .loading-container {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      min-height: 400px;
    }

    .loading-spinner {
      width: 48px;
      height: 48px;
      border: 4px solid var(--border-color);
      border-top: 4px solid var(--primary-color);
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-bottom: 20px;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: var(--text-color);
    }

    .empty-state i {
      font-size: 4rem;
      margin-bottom: 20px;
      opacity: 0.5;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .video-grid {
        grid-template-columns: 1fr;
        gap: 16px;
      }

      .video-list .video-card {
        flex-direction: column;
        height: auto;
        min-height: auto;
      }

      .video-list .video-thumbnail {
        width: 100%;
        height: 200px;
      }

      .video-list .video-info {
        min-width: auto;
        padding: 16px;
      }

      .view-controls {
        flex-direction: column;
        align-items: flex-start;
        gap: 12px;
      }
    }

    @media (max-width: 1024px) and (min-width: 769px) {
      .video-list .video-thumbnail {
        width: 200px;
        height: 120px;
      }
      
      .video-list .video-card {
        min-height: 120px;
      }
    }

    @media (max-width: 480px) {
      .video-grid {
        grid-template-columns: 1fr;
      }

      .video-info {
        padding: 16px;
      }

      .video-title {
        font-size: 0.9rem;
      }
    }
  </style>
</head>
<body>
  <!-- Include shared navbar -->
  <%- include('../partials/header') %>

  <div class="container-fluid p-0">
    <!-- Sidebar -->
    <nav class="sidebar close">
      <header>
        <i class='bx bx-chevron-right toggle'></i>
      </header>
        
      <div class="menu-bar">
        <div class="menu">
          <ul class="menu-links list-unstyled" id="sidebar">
            <!-- Video category links will be populated here by JavaScript -->
          </ul>
        </div>

        <!-- <div class="bottom-content">
          <li class="mode">
            <div class="sun-moon">
              <i class='bx bx-moon icon moon'></i>
              <i class='bx bx-sun icon sun'></i>
            </div>
            <span class="mode-text text">Dark mode</span>

            <div class="toggle-switch">
              <span class="switch"></span>
            </div>
          </li>
        </div> -->
      </div>
    </nav>

    <!-- Main Content -->
    <div class="home">
      <div class="container-fluid">
        <!-- Header Section -->
        <div class="row mb-4">
          <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
              <div>
                <h2 class="h3 fw-bold text-body mb-2" id="categoryTitle">
                  <i class="bx bx-play-circle me-2 text-primary"></i>
                  Loading Videos...
                </h2>
                <p class="text-muted mb-0">Learn with comprehensive video tutorials</p>
              </div>
              
              <!-- View Controls -->
              <div class="view-controls">
                <div class="view-toggle">
                  <button class="view-btn active" id="gridViewBtn" data-view="grid">
                    <i class="bx bx-grid-alt"></i>
                    <span>Grid</span>
                  </button>
                  <button class="view-btn" id="listViewBtn" data-view="list">
                    <i class="bx bx-list-ul"></i>
                    <span>List</span>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Video Content -->
        <div class="row">
          <div class="col-12">
            <div id="videoContent">
              <!-- Loading State -->
              <div class="loading-container">
                <div class="loading-spinner"></div>
                <h5>Loading Videos...</h5>
                <p class="text-muted">Please wait while we fetch the latest video content.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/faq.js"></script>

  <script>
    const API_BASE = '/api';
    let allVideos = {};
    let categories = [];
    let currentView = 'grid';
    let currentCategory = '';

    // Sidebar and dark mode functionality (using FAQ.js)
    // Additional video-specific functionality
    
    async function loadVideoData() {
      try {
        const [catRes, vidRes] = await Promise.all([
          fetch(`${API_BASE}/video-categories`),
          fetch(`${API_BASE}/videos`)
        ]);

        if (!catRes.ok || !vidRes.ok) {
          throw new Error('Failed to fetch data');
        }

        categories = await catRes.json();
        allVideos = await vidRes.json();

        renderSidebar();
        
        if (categories.length > 0) {
          const firstCategory = categories[0];
          currentCategory = firstCategory.name;
          updateCategoryTitle(currentCategory);
          renderVideos(currentCategory);
          setActiveCategory(firstCategory._id);
        }

      } catch (error) {
        console.error('Error loading video data:', error);
        showErrorState();
      }
    }

    function renderSidebar() {
      let sidebarHTML = '';
      
      categories.forEach(category => {
        const icon = category.iconClass || 'bx bx-play-circle';
        sidebarHTML += `
          <li class="nav-link">
            <a href="#" class="d-flex align-items-center" data-category="${category.name}" data-id="${category._id}" title="${category.name}">
              <div class="icon">
                <i class="${icon}"></i>
              </div>
              <span class="text nav-text">${category.name}</span>
            </a>
          </li>`;
      });

      $('#sidebar').html(sidebarHTML);
    }

    function setActiveCategory(categoryId) {
      $('#sidebar .nav-link a').removeClass('active');
      $(`#sidebar .nav-link a[data-id="${categoryId}"]`).addClass('active');
    }

    function updateCategoryTitle(categoryName) {
      $('#categoryTitle').html(`
        ${categoryName} Videos
      `);
    }

    function renderVideos(categoryName) {
      const videos = allVideos[categoryName] || [];
      
      if (videos.length === 0) {
        showEmptyState(categoryName);
        return;
      }

      let html = '';
      
      if (currentView === 'grid') {
        html = '<div class="video-grid">';
        videos.forEach(video => {
          html += createVideoCard(video, 'grid');
        });
        html += '</div>';
      } else {
        html = '<div class="video-list">';
        videos.forEach(video => {
          html += createVideoCard(video, 'list');
        });
        html += '</div>';
      }

      $('#videoContent').html(html);
    }

    function createVideoCard(video, viewType) {
      const thumbnailUrl = `https://img.youtube.com/vi/${video.youtubeId}/hqdefault.jpg`;
      const playerUrl = `/video/player?id=${video.youtubeId}&title=${encodeURIComponent(video.title)}`;
      
      return `
        <div class="video-card" onclick="window.open('${playerUrl}', '_blank')">
          <div class="video-thumbnail">
            <img src="${thumbnailUrl}" alt="${video.title}" loading="lazy">
            <div class="play-overlay">
              <i class="bx bx-play"></i>
            </div>
            <div class="video-duration">HD</div>
          </div>
          <div class="video-info">
            <h4 class="video-title">${video.title}</h4>
            <p class="video-description">${video.description || 'Learn step by step with this comprehensive video tutorial.'}</p>
            <div class="video-meta">
              <div class="video-views">
                <i class="bx bx-play-circle"></i>
                Tutorial
              </div>
              <div class="video-category-tag">${currentCategory}</div>
            </div>
          </div>
        </div>
      `;
    }

    function showEmptyState(categoryName) {
      $('#videoContent').html(`
        <div class="empty-state">
          <i class="bx bx-video text-muted"></i>
          <h4>No Videos Available</h4>
          <p class="text-muted">There are no videos available for ${categoryName} at the moment.</p>
        </div>
      `);
    }

    function showErrorState() {
      $('#videoContent').html(`
        <div class="empty-state">
          <i class="bx bx-error-circle text-danger"></i>
          <h4>Failed to Load Videos</h4>
          <p class="text-muted">Please check your connection and try again.</p>
          <button class="btn btn-primary" onclick="loadVideoData()">
            <i class="bx bx-refresh me-2"></i>Retry
          </button>
        </div>
      `);
    }

    // Event Handlers
    $(document).on('click', '#sidebar .nav-link a', function (e) {
      e.preventDefault();
      const categoryName = $(this).data('category');
      const categoryId = $(this).data('id');
      
      currentCategory = categoryName;
      updateCategoryTitle(categoryName);
      renderVideos(categoryName);
      setActiveCategory(categoryId);
      
      // Close sidebar on mobile after selection
      if (window.innerWidth <= 1024) {
        $('.sidebar').removeClass('open');
      }
    });

    // View toggle functionality
    $('.view-btn').on('click', function() {
      const view = $(this).data('view');
      
      if (view !== currentView) {
        currentView = view;
        $('.view-btn').removeClass('active');
        $(this).addClass('active');
        
        if (currentCategory) {
          renderVideos(currentCategory);
        }
      }
    });

    // Initialize on page load
    $(document).ready(function() {
      loadVideoData();
    });
  </script>
  <script src="/js/theme.js"></script>
</body>
</html>
